<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <tx:annotation-driven transaction-manager="jpaTransactionManager" />

    <context:component-scan base-package="com.github.tessera" />

    <!-- Resources -->
    <bean class="com.github.tessera.api.VersionResource"/>
    <bean class="com.github.tessera.api.UpCheckResource"/>
    <bean class="com.github.tessera.api.TransactionResource">
        <constructor-arg ref="enclave"/>
        <constructor-arg>
            <bean class="com.github.tessera.util.Base64Decoder" factory-method="create" />
        </constructor-arg>
    </bean>
    <bean class="com.github.tessera.api.PartyInfoResource">
        <constructor-arg ref="partyInfoService"/>
        <constructor-arg>
            <bean class="com.github.tessera.node.PartyInfoParser" factory-method="create"/>
        </constructor-arg>
    </bean>

    <bean id="partyInfoStore" class="com.github.tessera.node.PartyInfoStore">
        <constructor-arg value="#{config.serverConfig}"/>
    </bean>

    <bean name="partyInfoService" class="com.github.tessera.node.PartyInfoServiceImpl">
        <constructor-arg ref="partyInfoStore"/>
        <constructor-arg ref="config"/>
        <constructor-arg ref="keyManager"/>
    </bean>


    <bean name="payloadEncoder" class="com.github.tessera.transaction.PayloadEncoderImpl" />

    <bean name="enclave" class="com.github.tessera.enclave.EnclaveImpl">
        <constructor-arg ref="transactionService" />
        <constructor-arg ref="partyInfoService"/>
        <constructor-arg ref="payloadEncoder"/>
        <constructor-arg ref="postDelegate"/>
        <constructor-arg ref="keyManager" />
    </bean>

    <bean name="clientFactory" class="com.github.tessera.node.ClientFactory">
        <constructor-arg>
            <bean class="com.github.tessera.ssl.context.ClientSSLContextFactory" factory-method="create"/>
        </constructor-arg>
    </bean>

        <bean name="postDelegate" class="com.github.tessera.node.PostDelegate">
            <constructor-arg>
                <bean factory-bean="clientFactory" factory-method="buildFrom">
                    <constructor-arg value="#{config.serverConfig}" />
                </bean>
            </constructor-arg>
        </bean>

        <bean class="com.github.tessera.api.filter.LoggingFilter" />

        <bean class="com.github.tessera.api.filter.IPWhitelistFilter">
            <constructor-arg ref="config"/>
        </bean>

    <bean class="com.github.tessera.threading.TesseraScheduledExecutor">
        <constructor-arg>
            <bean class="java.util.concurrent.Executors" factory-method="newSingleThreadScheduledExecutor" />
        </constructor-arg>
        <constructor-arg>
            <bean class="com.github.tessera.node.PartyInfoPoller">
                <constructor-arg ref="partyInfoService"/>
                <constructor-arg>
                    <bean class="com.github.tessera.node.PartyInfoParser" factory-method="create"/>
                </constructor-arg>
                <constructor-arg ref="postDelegate"/>
            </bean>
        </constructor-arg>
        <constructor-arg value="2" />
    </bean>

        <bean name="transactionService" class="com.github.tessera.transaction.TransactionServiceImpl">
            <constructor-arg ref="encryptedTransactionDAO"/>
            <constructor-arg ref="payloadEncoder" />
            <constructor-arg ref="keyManager" />
            <constructor-arg ref="nacl" />
        </bean>

        <bean name="argon2" class="com.github.tessera.argon2.Argon2" factory-method="create" />

        <bean name="keyEncryptor" class="com.github.tessera.config.keys.KeyEncryptorImpl" >
            <constructor-arg ref="argon2"/>
            <constructor-arg ref="nacl"/>
        </bean>

        <bean name="keyManager" class="com.github.tessera.key.KeyManagerImpl">
            <constructor-arg ref="config" />
        </bean>


    <bean id="cliDelegate" class="com.github.tessera.config.cli.CliDelegate" factory-method="instance"/>

        <bean id="config" factory-bean="cliDelegate" factory-method="getConfig" />

        <bean name="naclFactory" class="com.github.tessera.nacl.NaclFacadeFactory" factory-method="newFactory" />

        <bean name="nacl" factory-bean="naclFactory" factory-method="create" />

        <bean name="encryptedTransactionDAO" class="com.github.tessera.transaction.EncryptedTransactionDAOImpl" />

        <bean class="com.github.tessera.api.exception.DefaultExceptionMapper" />
        <bean class="com.github.tessera.api.exception.DecodingExceptionMapper"/>
        <bean class="com.github.tessera.api.exception.KeyNotFoundExceptionMapper"/>
        <bean class="com.github.tessera.api.exception.NotFoundExceptionMapper" />
        <bean class="com.github.tessera.api.exception.TransactionNotFoundExceptionMapper"/>
        <bean class="com.github.tessera.api.exception.WebApplicationExceptionMapper"/>
        <bean class="com.github.tessera.api.exception.EntityNotFoundExceptionMapper"/>

        <bean class="com.github.tessera.api.ApiResource" />

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="driverClassName" value="org.h2.Driver"/>
            <property name="url" value="#{ config.getJdbcConfig().getUrl() }" />
            <property name="username" value="#{ config.getJdbcConfig().getUsername() }" />
            <property name="password" value="#{ config.getJdbcConfig().getPassword() }" />
        </bean>

        <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory" />
        </bean>

        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">


            <property name="dataSource" ref="dataSource" />
            <property name="persistenceUnitName" value="tessera" />

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
                    <property name="databasePlatform" value="org.eclipse.persistence.platform.database.H2Platform"/>
                </bean>
            </property>
            <property name="jpaDialect">
                <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />
            </property>

            <property name="jpaPropertyMap">
                <props>
                    <prop key="eclipselink.weaving">false</prop>
                    <prop key="eclipselink.session-name">tessera</prop>
                    <!--                <prop key="eclipselink.logging.level">FINE</prop>-->
                    <prop key="eclipselink.logging.logger">org.eclipse.persistence.logging.slf4j.SLF4JLogger</prop>
                    <prop key="eclipselink.logging.session">false</prop>

                    <prop key="javax.persistence.schema-generation.database.action">create</prop>
                    <prop key="javax.persistence.schema-generation.scripts.action">none</prop>
                    <!--<prop key="javax.persistence.schema-generation.scripts.action">create</prop>-->
                    <!--<prop key="javax.persistence.schema-generation.scripts.create-target">tesseraDDL.sql</prop>-->

                </props>
            </property>

        </bean>

        <beans profile="!disable-unixsocket">
            <bean id="socketServer" class="com.github.tessera.socket.SocketServerFactory" factory-method="createSocketServer">
                <constructor-arg ref="config" />
            </bean>

            <bean class="com.github.tessera.threading.TesseraScheduledExecutor">
                <constructor-arg>
                    <bean class="java.util.concurrent.Executors" factory-method="newSingleThreadScheduledExecutor" />
                </constructor-arg>
                <constructor-arg ref="socketServer" />
                <constructor-arg value="2" />
            </bean>
        </beans>

</beans>

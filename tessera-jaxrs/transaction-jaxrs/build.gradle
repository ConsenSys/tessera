plugins {
    id "com.benjaminsproule.swagger" version "1.0.8"
    id "java-library"
}

dependencies {
    compile project(":tessera-jaxrs:common-jaxrs")
    implementation project(":config")
    implementation project(":shared")
    implementation project(":tessera-core")
    implementation project(":enclave:enclave-api")
    implementation project(":encryption:encryption-api")
    implementation project(":tessera-data")
    implementation project(":tessera-context")

    implementation "jakarta.persistence:jakarta.persistence-api"
    implementation "org.hibernate:hibernate-validator"

    implementation "jakarta.ws.rs:jakarta.ws.rs-api"
    implementation "io.swagger:swagger-annotations"

    compile "jakarta.servlet:jakarta.servlet-api"
    implementation "org.apache.commons:commons-lang3"


    testCompile "org.glassfish.jersey.test-framework:jersey-test-framework-core"
    testRuntimeOnly "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2"
    testRuntimeOnly "org.glassfish.jersey.media:jersey-media-json-processing"
    testRuntimeOnly "org.glassfish.jersey.media:jersey-media-moxy"
    testRuntimeOnly "org.glassfish.jersey.inject:jersey-hk2"

}



swagger {

    apiSource {
        springmvc = false

        schemes = ["http", "https"]
        host = "localhost:8080"
        basePath = "/"
        outputFormats = ["json"]
        //attachSwaggerArtifact = true

        locations = ["com.quorum.tessera.q2t","com.quorum.tessera.api.common"]
        info {
            title = "Tessera rest"
            version = project.version
            license {
                url = "http://www.apache.org/licenses/LICENSE-2.0.html"
                name = "Apache 2.0"
            }
        }

        swaggerDirectory = ""+ project.buildDir +"/resources/main"
        //templatePath = "../src/main/swagger/strapdown.html.hbs"
       // outputPath = "build/resources/main/swagger/swagger.html"
        swaggerFileName = "swagger"

    }

    apiSource {
        springmvc = false

        schemes = ["http", "https"]
        host = "localhost:8080"
        basePath = "/"
        outputFormats = ["json"]
        //attachSwaggerArtifact = true

        locations = ["com.quorum.tessera.q2t","com.quorum.tessera.api.common"]
        info {
            title = "Tessera rest"
            version = project.version
            license {
                url = "http://www.apache.org/licenses/LICENSE-2.0.html"
                name = "Apache 2.0"
            }
        }

        swaggerDirectory = ""+ project.buildDir +"/resources/main"
        templatePath =  ""+ rootProject.rootDir +"/tessera-jaxrs/src/main/swagger/strapdown.html.hbs"
        outputPath = ""+ project.buildDir +"/resources/main/swagger.html"
        swaggerFileName = "swagger"

    }

}

task loaddeps() {

    def urls = []
    project.configurations.compileClasspath.resolve().flatten().each {
        urls += it.toURI().toURL()
    }
    urls.each {
        buildscript.classLoader.addURL it
    }

}

description = "transaction-jaxrs"

generateSwaggerDocumentation.dependsOn(loaddeps)
jar.dependsOn(generateSwaggerDocumentation)


compileJava {
    doFirst {
        options.compilerArgs = [
                "--module-path", classpath.asPath,
                "--add-modules", "swagger.annotations"
        ]
        classpath = files()
    }
}
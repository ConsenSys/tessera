plugins {
    id "com.benjaminsproule.swagger" version "1.0.7"
}


dependencies {

    compile project(':tessera-jaxrs:common-jaxrs')
    compile 'io.swagger:swagger-annotations'

    compile project(':service-locator:service-locator-api')
    runtimeOnly project(':service-locator:service-locator-spring')
    testImplementation project(':test-utils:mock-service-locator')

    compile project(':shared')
    compile project(':config')

    compile project(':tessera-core')
    compile project(':tessera-admin')
    compile project(':encryption:encryption-api')
    compile project(':tessera-partyinfo')
    compile 'javax.ws.rs:javax.ws.rs-api'

    runtimeOnly 'org.slf4j:jul-to-slf4j'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.5'
    testRuntimeOnly 'org.glassfish.jersey.media:jersey-media-json-processing'
    testRuntimeOnly 'org.glassfish.jersey.media:jersey-media-moxy'
    testRuntimeOnly 'com.sun.mail:javax.mail:1.6.2'
    testRuntimeOnly 'org.bouncycastle:bcprov-jdk15on'
    testCompile project(':server:jersey-server')

    testCompile "org.glassfish.jersey.test-framework:jersey-test-framework-core"
    testRuntimeOnly "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2"

}

description = 'admin-jaxrs'

swagger {

    apiSource {
        springmvc = false

        schemes = ['http', 'https']
        host = 'localhost:8080'
        basePath = '/'
        outputFormats = ['json']
        //attachSwaggerArtifact = true

        locations = ['com.quorum.tessera.admin.ConfigResource']
        info {
            title = 'Admin config resource'
            version = project.version
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }

        swaggerDirectory = ''+ project.buildDir +'/resources/main'
        swaggerFileName = 'admin'
    }

    apiSource {
        springmvc = false

        schemes = ['http', 'https']
        host = 'localhost:8080'
        basePath = '/'
        outputFormats = ['json']
        //attachSwaggerArtifact = true

        locations = ['com.quorum.tessera.admin.ConfigResource']
        info {
            title = 'Admin config resource'
            version = project.version
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }

        swaggerDirectory = ''+ project.buildDir +'/resources/main'
        templatePath =  ''+ rootProject.rootDir +'/tessera-jaxrs/src/main/swagger/strapdown.html.hbs'
        outputPath = ''+ project.buildDir +'/resources/main/admin.html'
        swaggerFileName = 'admin'
    }
}

task loaddeps() {

    def urls = []

    project.configurations.runtimeClasspath.resolve().flatten().each {
        urls += it.toURI().toURL()
    }
    urls.each {
        buildscript.classLoader.addURL it
    }


}

generateSwaggerDocumentation.dependsOn(loaddeps)
jar.dependsOn(generateSwaggerDocumentation)


name: Tessera Gradle Build

on: [push, pull_request]


env:
  GRADLE_CACHE_KEY: ${{ github.run_id }}-gradle-${{ github.run_number }}-${{ github.run_number }}-${{ github.sha }}
  DIST_TAR: tessera-dist/build/distributions/tessera-*.tar
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test --info
    - uses: actions/upload-artifact@v1
      if: success()
      with:
        name: tessera-dists
        path: /home/runner/work/tessera/tessera/tessera-dist/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: tessera-dists
        path: /home/runner/work/tessera/tessera/tessera-dist/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: enclave-dists
        path: /home/runner/work/tessera/tessera/enclave/enclave-jaxrs/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: aws-key-vault-dist
        path: /home/runner/work/tessera/tessera/key-vault/aws-key-vault/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: azure-key-vault-dist
        path: /home/runner/work/tessera/tessera/key-vault/azure-key-vault/build/distributions/
    - uses: actions/upload-artifact@v1
      with:
        name: hashicorp-key-vault-dist
        path: /home/runner/work/tessera/tessera/key-vault/hashicorp-key-vault/build/distributions/

  checkdependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: ./gradlew dependencyCheckAnalyze -x test

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
       java-version: 11
    - run: ./gradlew test -x dependencyCheckAnalyze -x :tests:acceptance-test:test -x javadoc -x :cli:config-cli:jacocoTestCoverageVerification --info

  itest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
       java-version: 11
    - run: |
        ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test -x checkstyleMain -x checkstyleTest
        ./gradlew :tests:acceptance-test:clean :tests:acceptance-test:test -PexcludeTests="RunHashicorpIT,AwsKeyVaultIT,RecoverIT,AzureKeyVaultIT" --info
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
       name: itest-junit-report
       path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/

  vaultTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: |
          wget https://releases.hashicorp.com/vault/1.2.2/vault_1.2.2_linux_amd64.zip -O /tmp/vault_1.2.2_linux_amd64.zip
          mkdir -p vault/bin && pushd $_
          unzip /tmp/vault_1.2.2_linux_amd64.zip
          export PATH=$PATH:$PWD && popd
          ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test -x checkstyleMain -x checkstyleTest
          ./gradlew :tests:acceptance-test:clean :tests:acceptance-test:test --tests RunHashicorpIT --tests AwsKeyVaultIT --tests AzureKeyVaultIT --info
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: vault-itest-junit-report
          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/

  recovery_itest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: |
          ./gradlew build -x dependencyCheckAnalyze -x javadoc -x test -x checkstyleMain -x checkstyleTest
          ./gradlew :tests:acceptance-test:clean :tests:acceptance-test:test --tests RecoverIT
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: recovery_itest-junit-report
          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/

#
#  remote_enclave_itest:
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ env.GRADLE_CACHE_KEY }}
#          restore-keys: |
#            ${{ env.GRADLE_CACHE_KEY }}
#      - uses: actions/download-artifact@v2
#        with:
#          name: tessera-dists
#          path: /home/runner/work/tessera/tessera/tessera-dist/build/distributions/
#      - uses: actions/download-artifact@v2
#        with:
#          name: enclave-dists
#          path: /home/runner/work/tessera/tessera/enclave/enclave-jaxrs/build/distributions/
#      - uses: actions/download-artifact@v2
#        with:
#          name: aws-key-vault-dist
#          path: /home/runner/work/tessera/tessera/key-vault/aws-key-vault/build/distributions/
#      - uses: actions/download-artifact@v2
#        with:
#          name: azure-key-vault-dist
#          path: /home/runner/work/tessera/tessera/key-vault/azure-key-vault/build/distributions/
#      - uses: actions/download-artifact@v2
#        with:
#          name: hashicorp-key-vault-dist
#          path: /home/runner/work/tessera/tessera/key-vault/hashicorp-key-vault/build/distributions/
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - run: ./gradlew :tests:acceptance-test:test --tests "*Remote*"
#      - uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: remote_enclave_itest-junit-report
#          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/
#      - uses: actions/upload-artifact@v1
#        if: failure()
#
#  recovery_itest:
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ env.GRADLE_CACHE_KEY }}
#          restore-keys: |
#            ${{ env.GRADLE_CACHE_KEY }}
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - run: ./gradlew :tests:acceptance-test:test --tests RecoverIT
#      - uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: recovery_itest-junit-report
#          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/

#  atest:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ env.GRADLE_CACHE_KEY }}
#          restore-keys: |
#            ${{ env.GRADLE_CACHE_KEY }}
#      - run: |
#          ./gradlew build -x test -x dependencyCheckAnalyze -x javadoc
#      - uses: docker/build-push-action@v1
#        with:
#          repository: quorumengineering/tessera
#          tags: latest
#          push: false
#          dockerfile: .github/workflows/DockerfileTest
#          build_args: JAR_FILE=tessera-dist/tessera-app/build/libs/tessera-app-*-app.jar
#      - run:
#          docker run --rm --network host -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/acctests:/tmp/acctests quorumengineering/acctests:latest test -Pauto -Dtags="!async && (basic || basic-istanbul || networks/typical::istanbul)" -Dauto.outputDir=/tmp/acctests -Dnetwork.forceDestroy=true
#      - uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: recovery_itest-junit-report
#          path: /home/runner/work/tessera/tessera/tests/acceptance-test/build/reports/tests/

  atest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: |
          ./gradlew build -x test -x dependencyCheckAnalyze -x javadoc
          cp tessera-dist/build/distributions/tessera-*.tar tessera-dist/build/distributions/tessera.tar
          mkdir tessera-extracted && tar xvf tessera-dist/build/distributions/tessera.tar -C tessera-extracted --strip-components 1
      - uses: docker/build-push-action@v1
        with:
          repository: quorumengineering/tessera
          tags: latest
          push: false
          dockerfile: .github/workflows/noBuild.Dockerfile
          build_args: DIST=tessera-extracted
      - run:
          docker run --rm --network host -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/acctests:/tmp/acctests quorumengineering/acctests:latest test -Pauto -Dtags="!async && (basic || basic-istanbul || networks/typical::istanbul)" -Dauto.outputDir=/tmp/acctests -Dnetwork.forceDestroy=true